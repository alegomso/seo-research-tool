# Production Dockerfile for Backend Server
FROM node:18-alpine AS builder

# Install pnpm
RUN npm install -g pnpm

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./
COPY apps/server/package.json ./apps/server/
COPY packages/*/package.json ./packages/*/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm build

# Production stage
FROM node:18-alpine AS runner

# Install pnpm and curl for health checks
RUN npm install -g pnpm && \
    apk add --no-cache curl

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 seo-portal

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=builder --chown=seo-portal:nodejs /app/apps/server/dist ./dist
COPY --from=builder --chown=seo-portal:nodejs /app/apps/server/package.json ./package.json
COPY --from=builder --chown=seo-portal:nodejs /app/node_modules ./node_modules

# Switch to non-root user
USER seo-portal

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Start the application
CMD ["pnpm", "start"]